# This file contains pin mappings for the stock 2020 Creality Ender 3
# V2. To use this config, during "make menuconfig" select the
# STM32F103 with a "28KiB bootloader" and serial (on USART1 PA10/PA9)
# communication.

# If you prefer a direct serial connection, in "make menuconfig"
# select "Enable extra low-level configuration options" and select
# serial (on USART3 PB11/PB10), which is broken out on the 10 pin IDC
# cable used for the LCD module as follows:
# 3: Tx, 4: Rx, 9: GND, 10: VCC

# Flash this firmware by copying "out/klipper.bin" to a SD card and
# turning on the printer with the card inserted. The firmware
# filename must end in ".bin" and must not match the last filename
# that was flashed.

# See docs/Config_Reference.md for a description of parameters.

[stepper_x]
step_pin: PC2
dir_pin: PB9
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA5
position_endstop: 0
position_max: 250
homing_speed: 50

[stepper_y]
step_pin: PB8
dir_pin: PB7
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA6
position_endstop: 0
position_max: 250
homing_speed: 50

[stepper_z]
step_pin: PB6
dir_pin: !PB5
enable_pin: !PC3
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
#position_endstop: 0.0
position_max: 250

[extruder]
max_extrude_only_distance: 100.0
step_pin: PB4
dir_pin: PB3
enable_pin: !PC3
microsteps: 16
rotation_distance: 33.406
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA1
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC5
min_temp: 0
max_temp: 250
# to calibrate extruder PIDS to update section at bottom of doc: PID_CALIBRATE HEATER=extruder TARGET=200 (or whatever temp)

[heater_bed]
heater_pin: PA2
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
min_temp: 0
max_temp: 130
# to calibrate extruder PIDS to update section at bottom of doc: PID_CALIBRATE HEATER=heater_bed TARGET=60 (or whatever temp)

[fan]
pin: PA0

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
max_z_velocity: 5
max_z_accel: 100

[bltouch]
sensor_pin: ^PB1
control_pin: PB0
x_offset: -44 #set your own offset
y_offset: -10 #set your own offset
z_offset: 3.00 #set your own offset

[safe_z_home] 
home_xy_position: 117.5,117.5 # Change coordinates to the center of your print bed
z_hop: 10                 # Move up 10mm 
z_hop_speed: 5

[bed_mesh]
speed: 120
horizontal_move_z: 5
mesh_min: 15, 15
mesh_max: 205, 205
probe_count: 5,3
algorithm: bicubic
fade_start: 1
fade_end: 10
fade_target: 0

#add pi temp to fluidd
[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[screws_tilt_adjust]
screw1: 70.5,37.5
screw1_name: front left screw
screw2: 240,37.5
screw2_name: front right screw
screw3: 240,207.5
screw3_name: rear right screw
screw4: 70.5,207.5
screw4_name: rear left screw
horizontal_move_z: 10
speed: 50
screw_thread: CW-M4

[firmware_retraction]
retract_length: 5
retract_speed: 50
unretract_speed: 50

[gcode_macro G29]
gcode:
 M190 S60
 G28
 BED_MESH_CALIBRATE
 BED_MESH_PROFILE SAVE=ender3v2
 SAVE_CONFIG
 
# Fluidd requirements start
[virtual_sdcard]
path: ~/gcode_files

[display_status]

[pause_resume]

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
  TURN_OFF_HEATERS
  CLEAR_PAUSE
  SDCARD_RESET_FILE
  BASE_CANCEL_PRINT

[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### end of definitions #####
  G91
  G1 E{E} F2100
  RESTORE_GCODE_STATE NAME=PAUSE_state
  BASE_RESUME

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  SAVE_GCODE_STATE NAME=PAUSE_state
  BASE_PAUSE
  G91
  G1 E-{E} F2100
  G1 Z{z_safe} F900
  G90
  G1 X{x_park} Y{y_park} F6000
  
# Fluidd requirements end

# dual left prime extrude
[gcode_macro PRIME_LINE]
gcode: 
  M117 Prime Line
  G92 E0 ;Reset Extruder
  # move z axis 
  G1 Z2.0 F3000 ;Move Z Axis up
  # move to prime position 
  G1 X20 Y30 Z0.28 F5000.0 ;Move to start position
  G1 X20 Y200.0 Z0.28 F1500.0 E15 ;Draw the first line
  G1 X22 Y200.0 Z0.28 F5000.0 ;Move to side a little
  G1 X22 Y50 Z0.28 F1500.0 E30 ;Draw the second line
  G92 E0 ;Reset Extruder
  G1 Z2.0 F3000 ;Move Z Axis up

# START_PRINT to remove custom gcode from superslicer, START_PRINT BED_TEMP=[first_layer_bed_temperature] EXTRUDER_TEMP=[first_layer_temperature]
# tries to warm up bed and extruder to finish at the same time
[gcode_macro START_PRINT]
gcode:
  {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(210)|float %}
  M117 Homing
  G90
  SET_GCODE_OFFSET Z=0.0
  G28
  BED_MESH_PROFILE LOAD=ender3v2 #could be default or any other mesh name
  G1 X15 Y20 Z5 F6000
  M117 Waiting for temperature
  M140 S{BED_TEMP}
  {% if printer.heater_bed.temperature > params.BED_TEMP|float*0.85 %}
      M140 S{BED_TEMP}
      M109 S{EXTRUDER_TEMP} 
      M190 S{BED_TEMP}
  {% else %}
      M190 S{params.BED_TEMP|float*0.85} # wait till 0.85 of bed temp is reached, then continue
      M140 S{BED_TEMP} 
      M109 S{EXTRUDER_TEMP}
      M190 S{BED_TEMP}
  {% endif %}
    
  # Prime line
  PRIME_LINE
  M117 Printing...

# END_PRINT to remove custom gcode from superslicer, END_PRINT
[gcode_macro END_PRINT]
gcode:
  M117 Done printing :)
  G91
  G1 E-3 Z+10 F3000
  G90
  G1 X10 Y220 F2000
  M104 S0
  M140 S0
  M84 X Y E
  BED_MESH_CLEAR
  UPDATE_DELAYED_GCODE ID=delayed_printer_off DURATION=120 #turns off relay to main printer power after 2 mins
  
# code to turn off printer relay after stated seconds in END_PRINT  
[gcode_macro POWER_OFF_PRINTER]
gcode:
  {action_call_remote_method("set_device_power",
                             device="printer",
                             state="off")}


[delayed_gcode delayed_printer_off]
initial_duration: 0.
gcode:
  POWER_OFF_PRINTER
